What is Emmet ?

Emmet is a free add on the text editors, With the help of emmet we can use some shortcuts which will then be expanded to the full pieces of code,This saves a lot of time of 
developers as they have to write less code manually.
Some examples of Emmet shortcuts : Li*4 , div>ul>li


Difference between library and framework ? 

Basically both are the reusable code written by someone else which help us to solve common problems in easier ways.Big Difference is like in a library it requires minimal
effort to add in your code, also you are in charge of the flow of the application.Whereas in the framework , the framework is in charge of the application.
Learning curve of libraries are less as compared to frameworks.


What is CDN? Why we use it ? 

Stands for Content Delivery Network.Basically it is a network of geographically dispersed severs.Main idea behind CDN is like if a user is trying to access a site so the data should be provided from the nearest server rather than the original server , it will save time and improve user experience.It is an optimization technique and allow to reduce load or traffic on a single server.

Why is React known as React ? 

So basically React was created by Facebook , and in facebook its a kind of app that always has a changing data . So react is a view in MVC and it should change or react
whenever user tries to interact with the app, user events and like that so its known as react.

What is CrossOrigin in script tag ? 

So basically crossorigin request is a request from a cross orogin url means from a different url(not the original url).So it depends on us if we want to share the user credentials with the cross origin or not so when you write cross origin as anonymous so no data shared else use credentials it will share the data.

What is the difference between React and React Dom?

React developers thought of splitting both the React library which deals with creating components , beautiful interface , from React Dom whose main function is just to put all the content to browser DOM . So ReactDom binds the React to Browser , but that is not true like we can even use in mobile devices which React Native so there instead of ReactDom we use something else ,So the split is in a way better.

What is difference between react.development.js and react.production.js files via CDN?

In production we have minified version of the files because in production means the most and minified version will take less time and enhance performance whereas in development its not that much needed.

What is async and defer?

These are the tags that can be used in Script , So in async the script is fetched asynchronously and when they are available they are executed by stoping HTML parsing at that time , but in defer the the script is fetched parallely as well but it will execute only once HTML will stop parsing.Use defer in most cases.

What is Npm ?

Npm is a package manager.When you install Node js in your system npm comes along with it .You can download various packages with the help of npm that can be used in your project as dependency.
Eg npm install <package-name>
or npm install <package-name>@version
These packages, some details are entered into package.json like they will come as dependency with their version , and in package lock it will lock the exact dependency
version and their subsequent dependency versions .And the package code is extracted in node modules , that can be used in your code according to your need in your app.

What is parcel/Webpack ? Why do you need it ? 

So basically these are bundlers . Their main job is to bundle, minify various js files and their dependencies into a static asset(js file) so that it can be served on the browser.As we can not ship so many js files in production , as it will make our user experience really bad , so bundlers simply try to minify our js in the smallest amount possible to enhance user experience. 

What is npx ? 

Npx simply means executing a package without downloading it. When we use npm first we need to install a package and then we need to run it .
like 
npm i <package-name>
npm run <package-name>
but with npx we just have to 
npx <package-name>
and it will get executed , So Npx is better when we have to use a package just one or 2 times in your project.After version 5.2 Npx comes bundled with Npm.

What is dependencies and dev dependencies ?

So basically dependency means a package that your project uses ,There are a very few projects that do not need any packages from outside.
So we can easily install dependencies using npm i <package-name>
It will be added under dependency inside package.json file.It will be available in run time aswell.
Whereas Dev Dependency are only available during development environment.
You can install them npm i -D <package-name>
And they will be added under dev-dependencies inside pacakge.json
Eg of dependencies would be react redux, and dev dependencies would be testing tools like enzyme , mocha

List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words.

Parcel is one of the bundler whose main job is to bundle or minify the js files into single assets file so that it can be served onto the browser.
It also perform image optimization
Hot module replacement ia also one of the feature where it replaces the module during the run time on the screen , and not fully refreshes the page, it helps in retaining the state.
Tree Shaking ia also one of the feature - which remove dead code from the minified files, and make our minified file more optimized
Zero configuration is required to add in your project

What is Tree Shaking?

So tree shaking is basically the removal of dead code from our minified files by our bundlers.Suppose we import a whole package in our code but we require a very specific part of package in our code, so when its minified then the extra code will also be adde which is not really required.So our bundlers are smart enough that they remove the extra code that is really not required.Hence making our minified file more optimized.

What is Hot Module Replacement?

Hot Module Replacement is also one of the feature of bundlers.Like module is replaced during run time , and not the full refresh is done.Because of this state of application is reserved and make developer experience a bit easy.

What is `.gitignore`? What should we add and not add into it?

The files that are present in the git ignore are completely ignored by git.And we should put only those files there that can be auto generated like node modules , dist files 

What is the difference between `package.json` and `package-lock.json`?

Package.json file contains metadata regarding the project.It usually contains project description , license information and dependencies along with its versions.
But the thing is like in package.json the versions are stored like ^ or ~ which is actually a version range. So suppose if another developer tries to clone our repository and we just have package.json it will not create the exact node modules structure, which might not desirable. So we have package.lock.json file which locks the dependency version and its subdependencies versions and so on.So now whenever we do npm install it will look at package.lock.json and create the same node module tree.

Why should I not modify `package-lock.json`?

We should not modify our package.lock.json file .Because its not meant to be edited from our end .Its main purpose is to lock the dependency tree, hence we should not modify it from our end.

 What is `node_modules` ? Is it a good idea to push that on git?
 
 Basically node modules is the encapsulated pieces of code that communicates with the external application based on the app requirement.So whenever we install any package the code will be stored in node modules package, and we can use that in our code using imports.We should not push node modules to git because they are very large in size and already package.json and package.lock.json have enough information to regenerate .So put it in git ignore.
 
 What is the `dist` folder?
 
 Dist folder contains the minified version of the source code.This is the code that will be used in production.
 
 What is `browserlists`?
 
 Its a configuration that we add in our package.json to tell what our target browsers should be. Like we add Last 2 vrsions so it will target last 2 versions of all the browsers available.
 
 Difference between Caret and tilde in package.json?
 
 So in package.json we see version either having caret or tilde in the start . So basicall caret means that the package can have its patch and minor version upgraded whereas tilde means just the patch versions can be upgraded.
 
 What is Reconcilation and Diffing algorithm ? Why we should add Keys in our react children ? 
 
So basically react creat different dom trees on every render function.And we have one virtual Dom and one Real Dom , react whenever there is some change first of all it changes the virtual Dom. Then it compares the real DOM and virtual DOM to see where are the changes and then update , this process is known as reconcilation.The old algorithms take around o(n3) which is very expensive .So now an algorithm that is diffing algorithm that is used to compare the trees its based on two assumption:
1) That if the root node is different it will definetly produce different roots
2)Developers can themselves indicate which react children can be stable during renders using keys
So now suppose diffing algorithm starts checking the root node, Now if that is only different so why to check children it will produce different dom trees. So react creates a new Dom tree from that root and children.If the Dom nodes are same , then it will check attribute and if there is any change it will change that.
So the reason Keys are important is like suppose we have 
<ul>
<li>Car</li>
<li>Ball<li/>
</ul>
------------
<ul>
<li>Mouse</li>
<li>Car</li>
<li>Ball<li/>
</ul>
React will not understand that Mouse is inserted new and whole this will be created from scratch and that will be q uite inefficient.So we can add key to them which will make the react understand oh this mouse is added so let me not touch Car and ball and just create Mouse and put it . So it enhances the performance.
Keys should be stable deterministic and unique among its sibling , Donot use random to generate the keys or using index.

What is JSX?

So basically creating element using react.createElement is a bit mess as the code grows . So JSX was developed by facebook developers , which allows you to write HTML like syntax inside Javascript.JSX is just a syntactical sugar , which make writing elements easier for the developer, whereas behind the scenes Babel converts the JSX to React.createElement and that returns an object and that is converted to HTML elements that is put up in the DOM.It was also built with the thought like why not put both the javascript and HTMl at the same place.


What are the advantages of JSX?

More Developer Friendly, its easier to use.
Its a syntactical sugar , provides more readability.
Easier to maintain.

What is Babel ? 

Babel is a javascript transcomppiler. So basically transpilation means converting a code to the same level of abstraction code, Eg converting js to ts and like wise . So basically babels main work is to convert our modern javascript into the javascript that our browser can understand, It also converts our JSX to React.createElement.
Its open source.



 
 
